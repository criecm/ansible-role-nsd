---
- name: OS vars
  include_vars: '{{ includefile }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}.yml'
      skip: True
  loop_control:
    loop_var: includefile
  tags: nsd, vars

- name: OS tasks
  include_tasks: '{{ includefile }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}.yml'
      skip: True
  loop_control:
    loop_var: includefile
  tags: nsd

- name: enable nsd
  service:
    name: nsd
    enabled: yes
  tags: rc, nsd

- name: check nsd-control
  stat:
    path: '{{ nsd_configdir }}/nsd_control.key'
  register: nsdcontrolkey
  tags: config, nsd

- name: init nsd-control
  shell: 'nsd-control-setup'
  when: not nsdcontrolkey.stat.exists
  tags: config, nsd, skip_ansible_lint

- name: dir conf.d
  file:
    dest: '{{ nsd_configdir }}/conf.d'
    state: directory
    mode: '0755'
    owner: root
    group: '0'
  tags: config, nsd

- name: zonesdir
  file:
    dest: '{{ item }}'
    state: directory
    mode: '0750'
    owner: '{{ nsd_zonesdir_owner | default("root") }}'
    group: '{{ nsd_group }}'
  with_items:
    - '{{ nsd_zonesdir }}'
    - '{{ nsd_zonesdir }}/master'
  tags: config, nsd

- name: zonesdir slaves
  file:
    dest: '{{ nsd_zonesdir }}/slave'
    state: directory
    mode: '2770'
    owner: root
    group: '{{ nsd_group }}'
  tags: config, nsd, skip_ansible_lint

- name: nsd.conf
  template:
    src: nsd.conf.j2
    dest: '{{ nsd_configdir }}/nsd.conf'
    validate: nsd-checkconf %s
  register: nsdcfg
  tags: config, nsd
  notify:
    - restart nsd

- name: start nsd
  service:
    name: nsd
    state: started

- name: reload nsd now
  command: nsd-control reconfig
  when: nsdcfg.changed
  tags: config, nsd, skip_ansible_lint

- name: get zones patterns
  shell: "nsd-control zonestatus | awk '/^zone:/{zone=$2}/pattern:/{printf(\"%s %s\\n\",zone,$2);}'"
  register: zpatterns
  check_mode: False
  changed_when: False

- include_tasks: zone.yml
  with_items: '{{ nsd_zones }}'
  loop_control:
    loop_var: nsd_zone
  tags: nsd, zones

- name: push to to_monitor fact
  block:
  - name: tmpmon
    set_fact:
      tmpmon:
        - proto: dns
          name: 'nsd {{ ansible_fqdn }}'
          port: '{{ nsd_port }}'
          host: '{{ inventory_hostname }}'
          type: dns
  - name: to_monitor
    set_fact:
      to_monitor: '{{ to_monitor | default([]) | union(tmpmon) }}'
      cacheable: yes
